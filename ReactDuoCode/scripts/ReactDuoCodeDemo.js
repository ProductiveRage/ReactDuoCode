//
// ReactDuoCodeDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
//
// Generated by DuoCode Compiler 0.6.1253.0 beta
//
(function ReactDuoCodeDemo() {
"use strict";
var $asm = {
    fullName: "ReactDuoCodeDemo",
    anonymousTypes: [],
    types: [],
    $getAttrs: function() { return [new System.Reflection.AssemblyTitleAttribute.ctor("ReactDuoCodeDemo"), new System.Reflection.AssemblyDescriptionAttribute.ctor(""), new System.Reflection.AssemblyConfigurationAttribute.ctor(""), new System.Reflection.AssemblyCompanyAttribute.ctor(""), new System.Reflection.AssemblyProductAttribute.ctor("ReactDuoCodeDemo"), new System.Reflection.AssemblyCopyrightAttribute.ctor("Copyright \xA9  2015"), new System.Reflection.AssemblyTrademarkAttribute.ctor(""), new System.Reflection.AssemblyCultureAttribute.ctor(""), new System.Reflection.AssemblyVersionAttribute.ctor("1.0.0.0"), new System.Reflection.AssemblyFileVersionAttribute.ctor("1.0.0.0"), new DuoCode.Runtime.CompilerAttribute.ctor("0.6.1253.0 beta")]; }
};
var $g = (typeof(global) !== "undefined" ? global : window);
var ReactDuoCodeDemo = $g.ReactDuoCodeDemo = $g.ReactDuoCodeDemo || {};
ReactDuoCodeDemo.Actions = ReactDuoCodeDemo.Actions || {};
ReactDuoCodeDemo.Dispatcher = ReactDuoCodeDemo.Dispatcher || {};
ReactDuoCodeDemo.ReactBindings = ReactDuoCodeDemo.ReactBindings || {};
ReactDuoCodeDemo.ReactBindings.Attributes = ReactDuoCodeDemo.ReactBindings.Attributes || {};
ReactDuoCodeDemo.Components = ReactDuoCodeDemo.Components || {};
ReactDuoCodeDemo.Stores = ReactDuoCodeDemo.Stores || {};
var $d = DuoCode.Runtime;
$d.$assemblies["ReactDuoCodeDemo"] = $asm;
ReactDuoCodeDemo.Dispatcher.IDispatcherAction = $d.declare("ReactDuoCodeDemo.Dispatcher.IDispatcherAction", null, 66, $asm, function($t, $p) {});
ReactDuoCodeDemo.Actions.TimePassedAction = $d.declare("ReactDuoCodeDemo.Actions.TimePassedAction", System.Object, 0, $asm, function($t, $p) {
    $t.$intfs = [ReactDuoCodeDemo.Dispatcher.IDispatcherAction];
    $t.ctor = function TimePassedAction() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
});
ReactDuoCodeDemo.Actions.RecordChangeAction$1 = $d.declare("ReactDuoCodeDemo.Actions.RecordChangeAction`1", System.Object, 256, $asm, function($t, $p, T) {
    $t.$intfs = [ReactDuoCodeDemo.Dispatcher.IDispatcherAction];
    $t.$ator = function() {
        this.Value = $d.default(T);
    };
    $t.ctor = function RecordChangeAction$1(value) {
        $t.$baseType.ctor.call(this);
        if (value == null)
            throw new System.ArgumentNullException.ctor$1("value");

        this.set_Value(value);
    };
    $t.ctor.prototype = $p;
    $p.get_Value = function RecordChangeAction$1_get_Value() { return this.Value; };
    $p.set_Value = function RecordChangeAction$1_set_Value(value) { this.Value = value;return value; };
}, ["T"]);
ReactDuoCodeDemo.Dispatcher.AppDispatcher = $d.declare("ReactDuoCodeDemo.Dispatcher.AppDispatcher", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        $t._dispatcher = null;
    };
    $t.ctor = function AppDispatcher() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
    $p.add__dispatcher = function AppDispatcher_add__dispatcher(value) {
        this._dispatcher = System.Delegate.Combine(this._dispatcher, value);
    };
    $p.remove__dispatcher = function AppDispatcher_remove__dispatcher(value) {
        this._dispatcher = System.Delegate.Remove(this._dispatcher, value);
    };
    $p.Register = function AppDispatcher_Register(callback) {
        // .net has great multi-threading support for events.. but this will be translated into JavaScript in the browser where everything's single-threaded!
        this.add__dispatcher($d.delegate(function(sender, e) {
            callback(e);
        }, this));
    };
    $p.HandleViewAction = function AppDispatcher_HandleViewAction(action) {
        if (action == null)
            throw new System.ArgumentNullException.ctor$1("action");

        this._dispatcher(null, new ReactDuoCodeDemo.Dispatcher.DispatcherMessage.ctor(1 /* MessageSourceOptions.View */, 
            action));
    };
    $p.HandleServerAction = function AppDispatcher_HandleServerAction(action) {
        if (action == null)
            throw new System.ArgumentNullException.ctor$1("action");

        this._dispatcher(null, new ReactDuoCodeDemo.Dispatcher.DispatcherMessage.ctor(0 /* MessageSourceOptions.Server */, 
            action));
    };
});
ReactDuoCodeDemo.Dispatcher.DispatcherMessage = $d.declare("ReactDuoCodeDemo.Dispatcher.DispatcherMessage", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.Source = 0 /* MessageSourceOptions */;
        this.Action = null;
    };
    $t.ctor = function DispatcherMessage(source, action) {
        $t.$baseType.ctor.call(this);
        if ((source != 0 /* MessageSourceOptions.Server */) && (source != 1 /* MessageSourceOptions.View */))
            throw new System.ArgumentOutOfRangeException.ctor$1("source");
        if (action == null)
            throw new System.ArgumentNullException.ctor$1("action");

        this.set_Source(source);
        this.set_Action(action);
    };
    $t.ctor.prototype = $p;
    $p.get_Source = function DispatcherMessage_get_Source() { return this.Source; };
    $p.set_Source = function DispatcherMessage_set_Source(value) { this.Source = value;return value; };
    $p.get_Action = function DispatcherMessage_get_Action() { return this.Action; };
    $p.set_Action = function DispatcherMessage_set_Action(value) { this.Action = value;return value; };
});
ReactDuoCodeDemo.Dispatcher.MessageSourceOptions = $d.declareEnum("ReactDuoCodeDemo.Dispatcher.MessageSourceOptions", 45, $asm, 257, ["Server", "View"], [0, 1]);
ReactDuoCodeDemo.Program = $d.declare("ReactDuoCodeDemo.Program", System.Object, 0, $asm, function($t, $p) {
    $t.Run = function Program_Run() {
        var dispatcher = new ReactDuoCodeDemo.Dispatcher.AppDispatcher.ctor();
        new ReactDuoCodeDemo.Stores.SimpleExampleStore.ctor(window.document.getElementById("main"), dispatcher);
        window.setInterval(($d.delegate(function() {
            dispatcher.HandleServerAction(new ReactDuoCodeDemo.Actions.TimePassedAction.ctor());
        }, this)), 500);
    };
});
ReactDuoCodeDemo.ReactBindings.Ele = $d.declare("ReactDuoCodeDemo.ReactBindings.Ele", System.Object, 0, $asm, function($t, $p) {
    $t.Props = function Ele_Props(TProps, props) {
        if (props == null)
            throw new System.ArgumentNullException.ctor$1("props");
        return new (ReactDuoCodeDemo.ReactBindings.Ele.ElementFactory$1(TProps).ctor)(props);
    };
});
ReactDuoCodeDemo.ReactBindings.Ele.ElementFactory$1 = $d.declare("ElementFactory`1", System.Object, 256, ReactDuoCodeDemo.ReactBindings.Ele, function($t, $p, TProps) {
    $t.$ator = function() {
        this._props = $d.default(TProps);
    };
    $t.ctor = function ElementFactory$1(props) {
        $t.$baseType.ctor.call(this);
        if (props == null)
            throw new System.ArgumentNullException.ctor$1("props");
        this._props = props;
    };
    $t.ctor.prototype = $p;
    $p.As = function ElementFactory$1_As(TComponent) {
        return ReactDuoCodeDemo.ReactComponentWrapper.GetElement($d.typeOf(TComponent), this._props);
    };
}, ["TProps"]);
ReactDuoCodeDemo.ReactBindings.Attributes.HTMLAttributes = $d.declare("ReactDuoCodeDemo.ReactBindings.Attributes.HTMLAttributes", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.className = null;
    };
    $t.ctor = function HTMLAttributes() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
});
ReactDuoCodeDemo.ReactBindings.Attributes.InputAttributes = $d.declare("ReactDuoCodeDemo.ReactBindings.Attributes.InputAttributes", ReactDuoCodeDemo.ReactBindings.Attributes.HTMLAttributes, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this.onChange = null;
        this.value = null;
    };
    $t.ctor = function InputAttributes() {
        $t.$baseType.ctor.call(this);
    };
    $t.ctor.prototype = $p;
});
ReactDuoCodeDemo.Components.TestComponent = $d.declare("ReactDuoCodeDemo.Components.TestComponent", ReactDuoCodeDemo.ReactComponentWrapper, 0, $asm, function($t, $p) {
    $t.New = function TestComponent_New(props) { return ReactDuoCodeDemo.ReactBindings.Ele.Props(ReactDuoCodeDemo.Components.TestComponent.Props, props).As(ReactDuoCodeDemo.Components.TestComponent); };
    $t.ctor = function TestComponent(props) {
        $t.$baseType.ctor.call(this, props);
    };
    $t.ctor.prototype = $p;
    $p.Render = function TestComponent_Render() {
        return React.DOM.div(null, this.props.Props.get_Name());
    };
});
ReactDuoCodeDemo.Components.TestComponent.Props = $d.declare("Props", System.Object, 0, ReactDuoCodeDemo.Components.TestComponent, function($t, $p) {
    $t.$ator = function() {
        this.Name = null;
    };
    $t.ctor = function Props(name) {
        $t.$baseType.ctor.call(this);
        // Note: Can't use string.IsNullOrWhiteSpace since it's not defined in DuoCode's base library
        if ((name || "").trim() == "")
            throw new System.ArgumentException.ctor$1("Null/blank name specified");

        this.set_Name(name);
    };
    $t.ctor.prototype = $p;
    $p.get_Name = function Props_get_Name() { return this.Name; };
    $p.set_Name = function Props_set_Name(value) { this.Name = value;return value; };
});
ReactDuoCodeDemo.Stores.SimpleExampleStore = $d.declare("ReactDuoCodeDemo.Stores.SimpleExampleStore", System.Object, 0, $asm, function($t, $p) {
    $t.$ator = function() {
        this._renderContainer = null;
        this._dispatcher = null;
        this._viewModel = null;
    };
    $t.ctor = function SimpleExampleStore(renderContainer, dispatcher) {
        $t.$baseType.ctor.call(this);
        if (renderContainer == null)
            throw new System.ArgumentNullException.ctor$1("renderContainer");
        if (dispatcher == null)
            throw new System.ArgumentNullException.ctor$1("dispatcher");

        this._renderContainer = renderContainer;
        this._dispatcher = dispatcher;
        this._viewModel = new ReactDuoCodeDemo.Stores.SimpleExampleStore.ViewModel.ctor(System.DateTime().get_Now(), 
            "Hi!", "");
        this.RenderIfActive();

        this._dispatcher.Register($d.delegate(function(message) {
            var recordChange = $d.as(message.get_Action(), ReactDuoCodeDemo.Actions.RecordChangeAction$1(ReactDuoCodeDemo.Stores.SimpleExampleStore.ViewModel));
            if (recordChange != null) {
                this.UserEdit(recordChange.get_Value());
                return;
            }

            if ($d.is(message.get_Action(), ReactDuoCodeDemo.Actions.TimePassedAction)) {
                this._viewModel = new ReactDuoCodeDemo.Stores.SimpleExampleStore.ViewModel.ctor(System.DateTime().get_Now(), 
                    this._viewModel.get_Message(), this._viewModel.get_ValidationError());
                this.RenderIfActive();
                return;
            }
        }, this));
    };
    $t.ctor.prototype = $p;
    $p.UserEdit = function SimpleExampleStore_UserEdit(viewModel) {
        if (viewModel == null)
            throw new System.ArgumentNullException.ctor$1("viewModel");

        this._viewModel = viewModel;
        this.RenderIfActive();
    };
    $p.RenderIfActive = function SimpleExampleStore_RenderIfActive() {
        React.render(React.DOM.div(null, React.DOM.h1(null, "React in DuoCode"), React.DOM.span((function() {
            var $obj = new ReactDuoCodeDemo.ReactBindings.Attributes.HTMLAttributes.ctor();
            $obj.className = "time";
            return $obj;
        }).call(this), this._viewModel.get_LastUpdated()), React.DOM.input((function() {
            var $obj = new ReactDuoCodeDemo.ReactBindings.Attributes.InputAttributes.ctor();
            $obj.className = "message";
            $obj.value = this._viewModel.get_Message();
            $obj.onChange = $d.delegate(function(ev) {
                this.UpdateMessage(ev.target.value);
            }, this);
            return $obj;
        }).call(this)), React.DOM.span((function() {
            var $obj = new ReactDuoCodeDemo.ReactBindings.Attributes.HTMLAttributes.ctor();
            $obj.className = "error";
            return $obj;
        }).call(this), this._viewModel.get_ValidationError())), this._renderContainer);
    };
    $p.UpdateMessage = function SimpleExampleStore_UpdateMessage(message) {
        if (message == null)
            throw new System.ArgumentNullException.ctor$1("message");

        this._dispatcher.HandleViewAction(new (ReactDuoCodeDemo.Actions.RecordChangeAction$1(ReactDuoCodeDemo.Stores.SimpleExampleStore.ViewModel).ctor)(new ReactDuoCodeDemo.Stores.SimpleExampleStore.ViewModel.ctor(System.DateTime().get_Now(), 
            message, (message.trim() == "") ? "Why no message??" : "")));
    };
});
ReactDuoCodeDemo.Stores.SimpleExampleStore.ViewModel = $d.declare("ViewModel", System.Object, 0, ReactDuoCodeDemo.Stores.SimpleExampleStore, function($t, $p) {
    $t.$ator = function() {
        this.LastUpdated = null;
        this.Message = null;
        this.ValidationError = null;
    };
    $t.ctor = function ViewModel(lastUpdated, message, validationError) {
        $t.$baseType.ctor.call(this);
        if (message == null)
            throw new System.ArgumentNullException.ctor$1("message");
        if (validationError == null)
            throw new System.ArgumentNullException.ctor$1("validationError");

        this.set_LastUpdated($t.GetTimeString(lastUpdated));
        this.set_Message(message);
        this.set_ValidationError(validationError);
    };
    $t.ctor.prototype = $p;
    $p.get_LastUpdated = function ViewModel_get_LastUpdated() { return this.LastUpdated; };
    $p.set_LastUpdated = function ViewModel_set_LastUpdated(value) { this.LastUpdated = value;return value; };
    $p.get_Message = function ViewModel_get_Message() { return this.Message; };
    $p.set_Message = function ViewModel_set_Message(value) { this.Message = value;return value; };
    $p.get_ValidationError = function ViewModel_get_ValidationError() { return this.ValidationError; };
    $p.set_ValidationError = function ViewModel_set_ValidationError(value) { this.ValidationError = value;return value; };
    $t.GetTimeString = function ViewModel_GetTimeString(value) {
        // Can't use value.Format("yyyy-MM-dd") since it's not defined in DuoCode's base library
        return String.Format("{0}:{1}:{2}", $d.array(System.Object, [value.get_Hour(), (value.get_Minute() < 10 ? "0" : "") + $d.toString(value.get_Minute()), 
            (value.get_Second() < 10 ? "0" : "") + $d.toString(value.get_Second())]));
    };
});
return $asm;
})();
//# sourceMappingURL=ReactDuoCodeDemo.js.map
